SELECT EVENT_START_DT, SUBSCRIBER_KEY, SUBSCRIBER_MSISDN, SUBSCRIBER_CIRCLE_ID, TRF_PLAN_KEY, SUM (VOICE_LOCAL_OG_HOME_MOU)  LOCAL_OG_MOU, SUM(VOICE_LOCAL_OG_HOME_PULSE_60) LOCAL_OG_PULSE_60, SUM(VOICE_LOCAL_OG_HOME_COUNT) LOCAL_OG_COUNT,  SUM(VOICE_LOCAL_OG_HOME_CORE_INR) LOCAL_OG_CORE_AMT, SUM (VOICE_LOCAL_OG_HOME_DED_INR) LOCAL_OG_DED_AMT, SUM  (VOICE_LOCAL_IC_OR_MOU) LOCAL_IC_OR_MOU, SUM (VOICE_LOCAL_IC_OR_PULSE_60) LOCAL_IC_OR_PULSE_60, SUM (VOICE_LOCAL_IC_OR_COUNT)  LOCAL_IC_OR_COUNT, SUM (VOICE_LOCAL_IC_OR_CORE_INR) LOCAL_IC_OR_CORE_AMT, SUM (VOICE_LOCAL_IC_OR_DED_INR)  LOCAL_IC_OR_DED_AMT, SUM (VOICE_STD_OG_HOME_MOU) STD_OG_MOU, SUM (VOICE_STD_OG_HOME_PULSE_60) STD_OG_PULSE_60, SUM  (VOICE_STD_OG_HOME_COUNT) STD_OG_COUNT, SUM (VOICE_STD_OG_HOME_CORE_INR) STD_OG_CORE_AMT, SUM (VOICE_STD_OG_HOME_DED_INR)  STD_OG_DED_AMT, SUM(VOICE_STD_IC_OR_MOU) STD_IC_OR_MOU, SUM(VOICE_STD_IC_OR_PULSE_60) STD_IC_OR_PULSE_60,  SUM(VOICE_STD_IC_OR_COUNT) STD_IC_OR_COUNT, SUM (VOICE_STD_IC_OR_CORE_INR) STD_IC_OR_CORE_AMT, SUM (VOICE_STD_IC_OR_DED_INR)  STD_IC_OR_DED_AMT FROM ( SELECT A.EVENT_START_DT, D.SUBSCRIBER_KEY, A.SUBSCRIBER_MSISDN, A.SUBSCRIBER_CIRCLE_ID,  A.TRF_PLAN_KEY, CASE WHEN EVENT_TYPE_KEY = 0 AND EVENT_TYPE_CLSF_KEY = 0 AND EVENT_DIR = 1 AND OUT_ROAMING_IND = 1 THEN SUM  (A.EVENT_DURATION)/60 ELSE 0 END AS VOICE_LOCAL_OG_HOME_MOU, CASE WHEN EVENT_TYPE_KEY = 0 AND EVENT_TYPE_CLSF_KEY = 0 AND  EVENT_DIR = 1 AND OUT_ROAMING_IND = 1 THEN SUM (CALL_PULSE_60) ELSE 0 END AS VOICE_LOCAL_OG_HOME_PULSE_60, CASE WHEN  EVENT_TYPE_KEY = 0 AND EVENT_TYPE_CLSF_KEY = 0 AND EVENT_DIR = 1 AND OUT_ROAMING_IND = 0 THEN COUNT(A.CDR_ID_KEY) ELSE 0 END  AS VOICE_LOCAL_OG_HOME_COUNT, CASE WHEN EVENT_TYPE_KEY = 0 AND EVENT_TYPE_CLSF_KEY = 0 AND EVENT_DIR = 1 AND OUT_ROAMING_IND  = 0 THEN SUM(CORE_ACC_CHARGE_AMT) ELSE 0 END AS VOICE_LOCAL_OG_HOME_CORE_INR, CASE WHEN EVENT_TYPE_KEY = 0 AND  EVENT_TYPE_CLSF_KEY = 0 AND EVENT_DIR = 1 AND OUT_ROAMING_IND = 0 THEN SUM(DED_ACC_CHARGE_AMT * DED_ACC_CONVERSION_FACTOR)  ELSE 0 END AS VOICE_LOCAL_OG_HOME_DED_INR, CASE WHEN EVENT_TYPE_KEY = 0 AND EVENT_TYPE_CLSF_KEY = 0 AND EVENT_DIR = 0 AND  OUT_ROAMING_IND = 1 THEN SUM (A.EVENT_DURATION)/60 ELSE 0 END AS VOICE_LOCAL_IC_OR_MOU, CASE WHEN EVENT_TYPE_KEY = 0 AND EVENT_TYPE_CLSF_KEY = 0  AND EVENT_DIR = 0 AND OUT_ROAMING_IND = 1 THEN SUM (CALL_PULSE_60) ELSE 0 END AS VOICE_LOCAL_IC_OR_PULSE_60, CASE WHEN  EVENT_TYPE_KEY = 0 AND EVENT_TYPE_CLSF_KEY = 0 AND EVENT_DIR = 0 AND OUT_ROAMING_IND = 1 THEN COUNT(A.CDR_ID_KEY)   ELSE 0  END AS VOICE_LOCAL_IC_OR_COUNT, CASE WHEN EVENT_TYPE_KEY = 0 AND EVENT_TYPE_CLSF_KEY = 0 AND EVENT_DIR = 0 AND  OUT_ROAMING_IND = 1 THEN SUM(CORE_ACC_CHARGE_AMT) ELSE 0 END AS VOICE_LOCAL_IC_OR_CORE_INR, CASE WHEN EVENT_TYPE_KEY = 0 AND  EVENT_TYPE_CLSF_KEY = 0 AND EVENT_DIR = 0 AND OUT_ROAMING_IND = 1 THEN SUM (DED_ACC_CHARGE_AMT * DED_ACC_CONVERSION_FACTOR)  ELSE 0 END AS VOICE_LOCAL_IC_OR_DED_INR, CASE WHEN EVENT_TYPE_KEY = 0 AND EVENT_TYPE_CLSF_KEY = 1 AND EVENT_DIR = 1 AND  OUT_ROAMING_IND = 0 THEN SUM (A.EVENT_DURATION)/60 ELSE 0 END AS VOICE_STD_OG_HOME_MOU, CASE WHEN EVENT_TYPE_KEY = 0  AND  EVENT_TYPE_CLSF_KEY = 1 AND EVENT_DIR = 1 AND OUT_ROAMING_IND = 0 THEN SUM (CALL_PULSE_60) ELSE 0 END AS VOICE_STD_OG_HOME_PULSE_60, CASE WHEN EVENT_TYPE_KEY = 0 AND EVENT_TYPE_CLSF_KEY = 1 AND EVENT_DIR = 1 AND  OUT_ROAMING_IND = 0 THEN COUNT(A.CDR_ID_KEY) ELSE 0 END AS VOICE_STD_OG_HOME_COUNT, CASE WHEN EVENT_TYPE_KEY = 0 AND EVENT_TYPE_CLSF_KEY = 1 AND EVENT_DIR = 1 AND  OUT_ROAMING_IND = 1 THEN SUM(CORE_ACC_CHARGE_AMT) ELSE 0 END AS VOICE_STD_OG_HOME_CORE_INR, CASE WHEN EVENT_TYPE_KEY = 0 AND  EVENT_TYPE_CLSF_KEY = 1 AND EVENT_DIR = 1 AND OUT_ROAMING_IND = 0 THEN SUM(DED_ACC_CHARGE_AMT * DED_ACC_CONVERSION_FACTOR)  ELSE 0 END AS VOICE_STD_OG_HOME_DED_INR, CASE WHEN EVENT_TYPE_KEY = 0 AND EVENT_TYPE_CLSF_KEY = 1 AND EVENT_DIR = 0 AND  OUT_ROAMING_IND = 1 THEN SUM (A.EVENT_DURATION)/60 ELSE 0 END AS VOICE_STD_IC_OR_MOU, CASE WHEN EVENT_TYPE_KEY = 0 AND  EVENT_TYPE_CLSF_KEY = 1 AND EVENT_DIR = 0 AND OUT_ROAMING_IND = 1 THEN SUM (CALL_PULSE_60)   ELSE 0 END AS  VOICE_STD_IC_OR_PULSE_60, CASE WHEN EVENT_TYPE_KEY = 0 AND EVENT_TYPE_CLSF_KEY = 1 AND EVENT_DIR = 0 AND OUT_ROAMING_IND = 2  THEN COUNT(A.CDR_ID_KEY) ELSE 0 END AS VOICE_STD_IC_OR_COUNT, CASE WHEN EVENT_TYPE_KEY = 0 AND EVENT_TYPE_CLSF_KEY = 1 AND  EVENT_DIR = 0 AND OUT_ROAMING_IND = 1 THEN SUM(CORE_ACC_CHARGE_AMT) ELSE 0 END AS VOICE_STD_IC_OR_CORE_INR, CASE WHEN  EVENT_TYPE_KEY = 0 AND EVENT_TYPE_CLSF_KEY = 1 AND EVENT_DIR = 0 AND OUT_ROAMING_IND = 1 THEN SUM (DED_ACC_CHARGE_AMT *  DED_ACC_CONVERSION_FACTOR) ELSE 0 END AS VOICE_STD_IC_OR_DED_INR FROM SCHEMA.SUBSCRIBER_RATED_USAGE_DPF A LEFT OUTER JOIN  SCHEMA.SUBSCRIBER_DEDICATED_ACCOUNT_USAGE_DPF B ON A.CDR_ID_KEY = B.CDR_ID_KEY AND a.subscriber_msisdn = b.subscriber_msisdn  LEFT OUTER JOIN SCHEMA.DEDICATED_ACCOUNT_DPF c ON A.SUBSCRIBER_CIRCLE_ID = C.CIRCLE_ID AND B.DED_ACC_KEY = C.DED_ACC_KEY AND  A.EVENT_START_DT >= C.DED_ACC_EFF_DT AND A.EVENT_START_DT < C.DED_ACC_END_DT LEFT OUTER JOIN  SCHEMA.SUBSCRIBER_MSISDN_HISTORY_DPF D ON A.subscriber_msisdn = D.subscriber_msisdn AND A.EVENT_START_DT >= D.msisdn_START_DT  and A.EVENT_START_DT < D.msisdn_END_DT WHERE A.EVENT_START_DT = '2009-02-02' AND A.SUBSCRIBER_CIRCLE_ID = 3 GROUP BY A.EVENT_START_DT, A.subscriber_msisdn,  D.SUBSCRIBER_KEY, A.EVENT_TYPE_KEY, A.SUBSCRIBER_CIRCLE_ID, A.EVENT_DIR, A.EVENT_TYPE_CLSF_KEY, A.OUT_ROAMING_IND,  A.TRF_PLAN_KEY) GROUP BY EVENT_START_DT, SUBSCRIBER_KEY, subscriber_msisdn, SUBSCRIBER_CIRCLE_ID, TRF_PLAN_KEY ;