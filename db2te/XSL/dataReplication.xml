<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
<xsl:output method="text"/>
<!--
  Author: Peter Prib
  
  Copyright Frygma Pty Ltd (ABN 90 791 388 622 2009) 2011 All rights reserved.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  
-->
<xsl:param name="action"></xsl:param>
<xsl:param name="delimiter">@</xsl:param>
<xsl:template match="/">
-- generated script : <xsl:value-of select="count(differences/row)"/> tables  
	<xsl:apply-templates select="differences"/>
-- end generated script
</xsl:template>
 
<xsl:template match="differences">
	<xsl:apply-templates select="row"/>
</xsl:template>

<xsl:template match="row">
<xsl:variable name="schema" select="key[@name ='TABSCHEMA']/text()"/>
<xsl:variable name="table" select="key[@name ='TABNAME']/text()"/>
<xsl:choose>
	<xsl:when test="$action = 'captureFullRefreshOnly'"><xsl:call-template name="captureFullRefreshOnly"/></xsl:when>
	<xsl:when test="$action = 'captureAll'"><xsl:call-template name="captureAll"/></xsl:when>
	<xsl:when test="$action = 'applySet'"><xsl:call-template name="applySet"/></xsl:when>
</xsl:choose>
</xsl:template>

<xsl:template name="captureFullRefreshOnly">
INSERT INTO ASN.IBMSNAP_REGISTER 
(SOURCE_OWNER, SOURCE_TABLE, SOURCE_VIEW_QUAL, GLOBAL_RECORD, SOURCE_STRUCTURE, SOURCE_CONDENSED, SOURCE_COMPLETE, CD_OWNER, CD_TABLE, PHYS_CHANGE_OWNER, 
PHYS_CHANGE_TABLE, CD_OLD_SYNCHPOINT, CD_NEW_SYNCHPOINT, DISABLE_REFRESH, CCD_OWNER, CCD_TABLE, CCD_OLD_SYNCHPOINT, SYNCHPOINT, SYNCHTIME, CCD_CONDENSED, CCD_COMPLETE, ARCH_LEVEL, 
DESCRIPTION, BEFORE_IMG_PREFIX, CONFLICT_LEVEL, CHG_UPD_TO_DEL_INS, CHGONLY, RECAPTURE, OPTION_FLAGS, STOP_ON_ERROR, STATE, STATE_INFO ) 
VALUES(
'<xsl:value-of select="$schema"/>',
'<xsl:value-of select="$table"/>',
0,
'N',
1,
'Y',
'Y',
null,
null,
null,
null,
null,
null,
0,
null,
null,
null,
null,
null,
null,
null,
'0801',
null,
null,
'0',
'N',
'N',
'N',
'NNNN',
'Y',
'I',
null )
<xsl:value-of select="$delimiter"/>
</xsl:template>

<xsl:template name="captureAll">
-- *** to be done ***

ALTER TABLE "<xsl:value-of select="$schema"/>"."<xsl:value-of select="$table"/>"
 DATA CAPTURE CHANGES;

CREATE TABLE "CD#<xsl:value-of select="$schema"/>"."<xsl:value-of select="$table"/>"
(
 IBMSNAP_COMMITSEQ CHAR ( 10 )  FOR BIT DATA   NOT NULL ,
 IBMSNAP_INTENTSEQ CHAR ( 10 )  FOR BIT DATA   NOT NULL ,
 IBMSNAP_OPERATION CHAR ( 1 )   NOT NULL ,
 
 -- columns in source table
 
) IN TSASNCD;

CREATE UNIQUE INDEX "CD#<xsl:value-of select="$schema"/>"."<xsl:value-of select="$table"/>"
 ON "CD#<xsl:value-of select="$schema"/>"."<xsl:value-of select="$table"/>"
 (
  IBMSNAP_COMMITSEQ ASC,
  IBMSNAP_INTENTSEQ ASC
 )
 PCTFREE 10
 MINPCTUSED 10
 <xsl:value-of select="$delimiter"/>

ALTER TABLE  "CD#<xsl:value-of select="$schema"/>"."<xsl:value-of select="$table"/>"  VOLATILE CARDINALITY
<xsl:value-of select="$delimiter"/>

INSERT INTO ASN.IBMSNAP_REGISTER (SOURCE_OWNER, SOURCE_TABLE,
SOURCE_VIEW_QUAL, GLOBAL_RECORD, SOURCE_STRUCTURE, SOURCE_CONDENSED,
SOURCE_COMPLETE, CD_OWNER, CD_TABLE, PHYS_CHANGE_OWNER, 
PHYS_CHANGE_TABLE, CD_OLD_SYNCHPOINT, CD_NEW_SYNCHPOINT, 
DISABLE_REFRESH, CCD_OWNER, CCD_TABLE, CCD_OLD_SYNCHPOINT, 
SYNCHPOINT, SYNCHTIME, CCD_CONDENSED, CCD_COMPLETE, ARCH_LEVEL, 
DESCRIPTION, BEFORE_IMG_PREFIX, CONFLICT_LEVEL, 
CHG_UPD_TO_DEL_INS, CHGONLY, RECAPTURE, OPTION_FLAGS,
STOP_ON_ERROR, STATE, STATE_INFO ) VALUES(
'<xsl:value-of select="$schema"/>',
'<xsl:value-of select="$table"/>',
0,
'N',
1,
'Y',
'Y',
'CD#<xsl:value-of select="$schema"/>',
'CD#<xsl:value-of select="$table"/>',
'CD#<xsl:value-of select="$schema"/>',
'CD#<xsl:value-of select="$table"/>',
null,
null,
0,
null,
null,
null,
null,
null,
null,
null,
'0801',
null,
'X',
'0',
'N',
'N',
'Y',
'NNNN',
'Y',
'I',
null )
<xsl:value-of select="$delimiter"/>
</xsl:template>

<xsl:template name="capturePartial">
-- *** to be done
<xsl:value-of select="$delimiter"/>
</xsl:template>

<xsl:template name="applySet">
-- *** to be done
INSERT INTO ASN.IBMSNAP_SUBS_SET 
( APPLY_QUAL, SET_NAME, WHOS_ON_FIRST, SET_TYPE,ACTIVATE, SOURCE_SERVER, SOURCE_ALIAS, TARGET_SERVER, TARGET_ALIAS, STATUS, 
 REFRESH_TYPE, SLEEP_MINUTES, EVENT_NAME, MAX_SYNCH_MINUTES, AUX_STMTS, ARCH_LEVEL, LASTRUN, LASTSUCCESS, CAPTURE_SCHEMA, TGT_CAPTURE_SCHEMA, OPTION_FLAGS, 
 FEDERATED_SRC_SRVR, FEDERATED_TGT_SRVR,  COMMIT_COUNT, JRN_LIB, JRN_NAME 
 ) VALUES (
'<xsl:value-of select="$APPLY_QUAL"/>',
'<xsl:value-of select="$SET_NAME"/>',
 'S',
 'R',
 1,
 '<xsl:value-of select="$SOURCE_SERVER"/>',
 '<xsl:value-of select="$SOURCE_ALIAS"/>',
 '<xsl:value-of select="$TARGET_SERVER"/>',
 '<xsl:value-of select="$TARGET_ALIAS"/>',
 0,
 'E',
 0,
 '<xsl:value-of select="$EVENT_NAME"/>',
 <xsl:value-of select="MAX_SYNCH_MINUTES"/>20,
 0,
 '0801',
 substr(CHAR(current timestamp),1,21),
 null,
 'ASN',
 null,
 'TNNN',
 null,
 null,
 null,
 null,
 null
 )
<xsl:value-of select="$delimiter"/>
</xsl:template>

</xsl:stylesheet>
